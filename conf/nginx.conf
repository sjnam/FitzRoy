daemon on;
master_process on;
worker_processes auto;
worker_cpu_affinity auto;
error_log logs/error.log error;
pid logs/nginx.pid;

events {
    accept_mutex off;
}

env PATH;

http {
    server_tokens off;

    lua_package_path "$prefix/lib/?.lua;$prefix/lua/?.lua;;";

    init_by_lua_block {
        require "resty.core"
        collectgarbage("collect")
    }

    lua_shared_dict gxn_cache 10m;

    server {
        listen 8080;

        resolver 8.8.8.8;
        include mime.types;
        charset utf-8;

        location /sample/ {
            default_type text/html;

            content_by_lua_block {
                require("gxn").go()
            }
        }

        location = /preview.gxn {
            default_type text/html;
            client_body_buffer_size 1m;

            content_by_lua_block {
                local gxn = require "gxn"
                ngx.req.read_body()
                local args = ngx.req.get_post_args()
                local html = string.format("<%s cmd='%s'"
                                .." width='400' cache='no'>%s</%s>",
                                args.gx, args.cmd or "", args.code, args.gx)
                gxn.preview(html)
            }
        }

        location = /favicon.ico {
            return         204;
            access_log     off;
            log_not_found  off;
        }
    }
}
